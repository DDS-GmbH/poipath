plugins {
    id 'jacoco'
    id 'java'
    id 'maven-publish'
    id "org.owasp.dependencycheck" version "8.4.0"
    id 'checkstyle'
    id "org.sonarqube" version "4.3.1.3277"
}

group = 'com.docutools'
version = '2.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url "https://maven.pkg.github.com/dds-gmbh/poipath"
            credentials {
                username = project.findProperty("GITHUB_USERNAME") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("GITHUB_TOKEN") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
            artifactId = 'poipath'
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
}

def apachePOIVersion = '5.2.4'

dependencies {
    implementation("org.apache.poi:poi:$apachePOIVersion")
    implementation("org.apache.poi:poi-ooxml:$apachePOIVersion")
    implementation("org.apache.poi:poi-ooxml-lite:$apachePOIVersion")

    testImplementation('org.junit.jupiter:junit-jupiter:5.10.0')
    testImplementation("org.hamcrest:hamcrest:2.2")
}

java {
    withSourcesJar()
    withJavadocJar()
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

dependencyCheck {
    format = 'ALL'
    junitFailOnCVSS = 6.0
    failBuildOnCVSS = 6.0
    suppressionFile = 'config/dependency-check/suppression.xml'
}
tasks.withType(Checkstyle) {
    ignoreFailures = false
    maxWarnings = 0 // Maximum number of warnings allowed
    reports {
        html.outputLocation = rootProject.file("build/reports/checkstyle.html")
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "poipath"
        property "sonar.organization", "docu-tools"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.verbose", "true"
        property "sonar.sources", "src/main/java/"
        property "sonar.language", "java"
        property "sonar.java.binaries", "."
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.qualitygate.wait", "true"
        property "sonar.qualitygate.timeout", "180"
    }
}

jacocoTestReport {
    reports {
        xml.required = true
    }
    dependsOn test
}
